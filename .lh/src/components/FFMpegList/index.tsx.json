{
    "sourceFile": "src/components/FFMpegList/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748098083843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748098112183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,56 @@\n-import React from \"react\";\r\n-import styles from \"./style.less\";\r\n+import { List, Radio, Space, Typography } from 'antd';\r\n+import React, { useEffect } from 'react';\r\n \r\n+import styles from './style.less';\r\n+import { useFFmpegListStore } from './store';\r\n+\r\n+const { Text } = Typography;\r\n+\r\n const FFmpegList: React.FC = () => {\r\n+  const { templates, selectedTemplateId, loadTemplates, selectTemplate } = useFFmpegListStore();\r\n+\r\n+  useEffect(() => {\r\n+    // Load templates when the component mounts\r\n+    loadTemplates();\r\n+  }, [loadTemplates]); // Depend on loadTemplates to satisfy eslint (though it's stable)\r\n+\r\n+  const handleSelectTemplate = (templateId: string | null) => {\r\n+    selectTemplate(templateId);\r\n+    // TODO: Potentially update FFmpegPanel's state with selected template's operations and parameters\r\n+    // This would involve either: \r\n+    // 1. FFmpegList calling an action/function provided by FFmpegPanel or a shared store\r\n+    // 2. App.tsx observing selectedTemplateId changes and updating FFmpegPanel's store\r\n+  };\r\n+\r\n   return (\r\n     <div className={styles.ffmpegListContainer}>\r\n-      {/* Template list will go here */}\r\n-      <h2>FFmpeg 模板列表</h2>\r\n+      <h2>FFmpeg 模板列表 (单选)</h2>\r\n+      <List\r\n+        dataSource={templates}\r\n+        renderItem={template => (\r\n+          <List.Item\r\n+            actions={[\r\n+              <Radio\r\n+                checked={selectedTemplateId === template.id}\r\n+                onClick={() => handleSelectTemplate(selectedTemplateId === template.id ? null : template.id)}\r\n+              />,\r\n+            ]}\r\n+            className={styles.listItem}\r\n+          >\r\n+            <List.Item.Meta\r\n+              title={<Text strong>{template.name}</Text>}\r\n+              description={\r\n+                <Space direction=\"vertical\" size={0}>\r\n+                    <Text type=\"secondary\">操作: {template.operations.join(', ')}</Text>\r\n+                    {/* Display some parameter summary if needed */}\r\n+                    {/* <Text type=\"secondary\">参数: ...</Text> */}\r\n+                </Space>\r\n+              }\r\n+            />\r\n+          </List.Item>\r\n+        )}\r\n+      />\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1748098449287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { List, Radio, Space, Typography } from \"antd\";\r\n import React, { useEffect } from \"react\";\r\n \r\n-import styles from \"./style.less\";\r\n+import styles from \"./style.module.less\";\r\n import { useFFmpegListStore } from \"./store\";\r\n \r\n const { Text } = Typography;\r\n \r\n"
                }
            ],
            "date": 1748098083843,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport styles from './style.less';\r\n\r\nconst FFmpegList: React.FC = () => {\r\n  return (\r\n    <div className={styles.ffmpegListContainer}>\r\n      {/* Template list will go here */}\r\n      <h2>FFmpeg 模板列表</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FFmpegList; "
        }
    ]
}