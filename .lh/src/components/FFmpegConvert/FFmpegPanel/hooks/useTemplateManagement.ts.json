{
    "sourceFile": "src/components/FFmpegConvert/FFmpegPanel/hooks/useTemplateManagement.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1748099278912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748099493498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { FFmpegOperationType, ParamValues } from \"../types\";\r\n \r\n import { FormInstance } from \"antd/lib/form\";\r\n import { message } from \"antd\";\r\n-import { useFFmpegPanelStore } from \"../store\";\r\n+import { useFFmpegPanelStore } from \"../../store\";\r\n import { useState } from \"react\";\r\n \r\n interface UseTemplateManagementProps {\r\n   form: FormInstance; // 需要访问form实例来校验参数\r\n"
                },
                {
                    "date": 1748130634115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,22 +34,22 @@\n   const { templates, saveTemplate, deleteTemplate, applyTemplate } =\r\n     useFFmpegPanelStore();\r\n \r\n   // 新建模板 (包含表单验证)\r\n-  const handleCreateTemplate = async () => {\r\n+  const handleCreateTemplate = async (name: string) => {\r\n     try {\r\n       await form.validateFields(); // 校验所有参数\r\n     } catch {\r\n       message.error(\"请先正确填写所有参数，再保存模板！\");\r\n       return;\r\n     }\r\n-    if (!newTplName.trim()) {\r\n+    if (!name.trim()) {\r\n       message.warning(\"请输入模板名称\");\r\n       return;\r\n     }\r\n     // 调用 saveTemplate 进行新增操作\r\n     saveTemplate({\r\n-      name: newTplName.trim(),\r\n+      name: name.trim(),\r\n       operations: selectedOperations,\r\n       params: paramValues,\r\n     });\r\n     setNewTplName(\"\");\r\n"
                },
                {
                    "date": 1748130819705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,8 @@\n       operations: selectedOperations,\r\n       params: paramValues,\r\n     });\r\n     setNewTplName(\"\");\r\n-    message.success(\"模板已保存\");\r\n     setEditingTemplateId(null); // 新增后退出编辑模式\r\n   };\r\n \r\n   // 更新当前正在编辑的模板\r\n@@ -87,9 +86,8 @@\n       params: paramValues,\r\n       createdAt: currentTemplate.createdAt,\r\n     } as any); // 强制类型转换，因为 saveTemplate 参数类型是 SavableFFmpegTemplate\r\n \r\n-    message.success(\"模板已更新\");\r\n     setEditingTemplateId(null); // 更新后退出编辑模式\r\n     setModalOpen(false); // 关闭模态框\r\n   };\r\n \r\n"
                },
                {
                    "date": 1748263873999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,15 @@\n     name: string;\r\n   } | null>(null);\r\n   const [newTemplateName, setNewTemplateName] = useState(\"\"); // 用于重命名输入框\r\n \r\n-  const { templates, saveTemplate, deleteTemplate, applyTemplate } =\r\n-    useFFmpegPanelStore();\r\n+  const {\r\n+    templates,\r\n+    saveTemplate,\r\n+    deleteTemplate,\r\n+    applyTemplate,\r\n+    selectTemplate,\r\n+  } = useFFmpegPanelStore();\r\n \r\n   // 新建模板 (包含表单验证)\r\n   const handleCreateTemplate = async (name: string) => {\r\n     try {\r\n@@ -160,8 +165,9 @@\n     handleRenameSave,\r\n     handleRenameCancel,\r\n     deleteTemplate,\r\n     applyTemplate,\r\n+    selectTemplate,\r\n   };\r\n };\r\n \r\n export default useTemplateManagement;\r\n"
                },
                {
                    "date": 1748264012147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n     saveTemplate,\r\n     deleteTemplate,\r\n     applyTemplate,\r\n     selectTemplate,\r\n+    setMode,\r\n   } = useFFmpegPanelStore();\r\n \r\n   // 新建模板 (包含表单验证)\r\n   const handleCreateTemplate = async (name: string) => {\r\n@@ -166,8 +167,10 @@\n     handleRenameCancel,\r\n     deleteTemplate,\r\n     applyTemplate,\r\n     selectTemplate,\r\n+    setEditingTemplateId,\r\n+    setMode,\r\n   };\r\n };\r\n \r\n export default useTemplateManagement;\r\n"
                }
            ],
            "date": 1748099278912,
            "name": "Commit-0",
            "content": "import { FFmpegOperationType, ParamValues } from \"../types\";\r\n\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { message } from \"antd\";\r\nimport { useFFmpegPanelStore } from \"../store\";\r\nimport { useState } from \"react\";\r\n\r\ninterface UseTemplateManagementProps {\r\n  form: FormInstance; // 需要访问form实例来校验参数\r\n  selectedOperations: FFmpegOperationType[];\r\n  paramValues: ParamValues;\r\n}\r\n\r\nconst useTemplateManagement = ({\r\n  form,\r\n  selectedOperations,\r\n  paramValues,\r\n}: UseTemplateManagementProps) => {\r\n  // 模板管理弹窗状态和重命名状态\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editingTemplateId, setEditingTemplateId] = useState<string | null>(\r\n    null\r\n  );\r\n  const [newTplName, setNewTplName] = useState(\"\"); // 用于新建模板输入框\r\n\r\n  // 重命名模态框状态\r\n  const [renameModalOpen, setRenameModalOpen] = useState(false);\r\n  const [renamingTemplate, setRenamingTemplate] = useState<{\r\n    id: string;\r\n    name: string;\r\n  } | null>(null);\r\n  const [newTemplateName, setNewTemplateName] = useState(\"\"); // 用于重命名输入框\r\n\r\n  const { templates, saveTemplate, deleteTemplate, applyTemplate } =\r\n    useFFmpegPanelStore();\r\n\r\n  // 新建模板 (包含表单验证)\r\n  const handleCreateTemplate = async () => {\r\n    try {\r\n      await form.validateFields(); // 校验所有参数\r\n    } catch {\r\n      message.error(\"请先正确填写所有参数，再保存模板！\");\r\n      return;\r\n    }\r\n    if (!newTplName.trim()) {\r\n      message.warning(\"请输入模板名称\");\r\n      return;\r\n    }\r\n    // 调用 saveTemplate 进行新增操作\r\n    saveTemplate({\r\n      name: newTplName.trim(),\r\n      operations: selectedOperations,\r\n      params: paramValues,\r\n    });\r\n    setNewTplName(\"\");\r\n    message.success(\"模板已保存\");\r\n    setEditingTemplateId(null); // 新增后退出编辑模式\r\n  };\r\n\r\n  // 更新当前正在编辑的模板\r\n  const handleUpdateTemplate = async () => {\r\n    if (!editingTemplateId) return; // 不在编辑模式则不执行\r\n\r\n    try {\r\n      await form.validateFields(); // 校验所有参数\r\n    } catch {\r\n      message.error(\"请先正确填写所有参数，再更新模板！\");\r\n      return;\r\n    }\r\n\r\n    // 找到当前编辑的模板，获取其创建时间\r\n    const currentTemplate = templates.find(\r\n      (tpl) => tpl.id === editingTemplateId\r\n    );\r\n\r\n    if (!currentTemplate) {\r\n      message.error(\"未找到要更新的模板！\");\r\n      setEditingTemplateId(null);\r\n      return;\r\n    }\r\n\r\n    // 调用 saveTemplate 进行更新操作 (包含原ID和创建时间)\r\n    saveTemplate({\r\n      id: editingTemplateId,\r\n      name: currentTemplate.name,\r\n      operations: selectedOperations,\r\n      params: paramValues,\r\n      createdAt: currentTemplate.createdAt,\r\n    } as any); // 强制类型转换，因为 saveTemplate 参数类型是 SavableFFmpegTemplate\r\n\r\n    message.success(\"模板已更新\");\r\n    setEditingTemplateId(null); // 更新后退出编辑模式\r\n    setModalOpen(false); // 关闭模态框\r\n  };\r\n\r\n  // 模板保存 (触发模态框)\r\n  const handleSaveTemplate = () => {\r\n    setModalOpen(true);\r\n    // 打开模态框时，如果不在编辑模式，清空新建模板名称输入框\r\n    if (!editingTemplateId) {\r\n      setNewTplName(\"\");\r\n    }\r\n  };\r\n\r\n  // 打开重命名模态框\r\n  const handleOpenRenameModal = (tpl: { id: string; name: string }) => {\r\n    setRenamingTemplate(tpl);\r\n    setNewTemplateName(tpl.name); // 将当前名称填充到输入框\r\n    setRenameModalOpen(true);\r\n  };\r\n\r\n  // 处理重命名保存\r\n  const handleRenameSave = async () => {\r\n    if (!renamingTemplate) return; // 没有正在重命名的模板\r\n\r\n    if (!newTemplateName.trim()) {\r\n      message.warning(\"请输入新的模板名称\");\r\n      return;\r\n    }\r\n\r\n    // 找到要重命名的模板并更新其名称\r\n    const templateToRename = templates.find(\r\n      (tpl) => tpl.id === renamingTemplate.id\r\n    );\r\n\r\n    if (templateToRename) {\r\n      // 调用 saveTemplate 进行更新操作\r\n      saveTemplate({\r\n        ...templateToRename,\r\n        name: newTemplateName.trim(),\r\n      });\r\n      message.success(\"模板已重命名\");\r\n      handleRenameCancel(); // 重命名成功后关闭模态框\r\n    }\r\n  };\r\n\r\n  // 处理重命名取消\r\n  const handleRenameCancel = () => {\r\n    setRenameModalOpen(false);\r\n    setRenamingTemplate(null);\r\n    setNewTemplateName(\"\");\r\n  };\r\n\r\n  return {\r\n    modalOpen,\r\n    setModalOpen,\r\n    editingTemplateId,\r\n    setEditingTemplateId,\r\n    newTplName,\r\n    setNewTplName,\r\n    renameModalOpen,\r\n    setRenameModalOpen,\r\n    renamingTemplate,\r\n    setRenamingTemplate,\r\n    newTemplateName,\r\n    setNewTemplateName,\r\n    templates,\r\n    handleCreateTemplate,\r\n    handleUpdateTemplate,\r\n    handleSaveTemplate,\r\n    handleOpenRenameModal,\r\n    handleRenameSave,\r\n    handleRenameCancel,\r\n    deleteTemplate,\r\n    applyTemplate,\r\n  };\r\n};\r\n\r\nexport default useTemplateManagement;\r\n"
        }
    ]
}